{% block command %}LEDs setzen{% endblock %}

{% block render %}
    <div class="neopixel_led_container" style="height: {{ maxTop }}px;">
    {% for key, slaveLed in slaveLeds %}
        <div class="neopixel_led{% if logLeds[key] is not defined %} disabled{% endif %}" style="
            top: {{ slaveLed.top }}px;
            left: {{ slaveLed.left }}px;
            {% if logLeds[key] is defined %}
                {% set logLed = logLeds[key] %}
                background: rgb({{ logLed.red }}, {{ logLed.green }}, {{ logLed.blue }});
            {% endif %}
        " title="{{ key+1 }}{% if logLeds[key] is defined %}: #{{ logLed.red|dechex|upper }}{{ logLed.green|dechex|upper }}{{ logLed.blue|dechex|upper }}{% endif %}"></div>
    {% endfor %}
    </div>
{% endblock render %}

{% block explain %}
    {% if part == 'address' %}
        {% if address == constant('GibsonOS\\Module\\Hc\\Mapper\\LedMapper::RANGE_ADDRESS') %}Adressbereich
        {% elseif address > constant('GibsonOS\\Module\\Hc\\Mapper\\LedMapper::MAX_PROTOCOL_LEDS') %}Adressgruppe
        {% else %}Nummer: {{ address+1 }}
        {% endif %}
    {% elseif part == 'rangeAddress' %}Addressbereich {% if from is defined %}von: {{ from }}{% else %}bis: {{ to }}{% endif %}
    {% elseif part == 'red' %}Rot: {{ red }}
    {% elseif part == 'green' %}Gr√ºn: {{ green }}
    {% elseif part == 'blue' %}Blau: {{ blue }}
    {% elseif part == 'effect' %}
        Einblenden: {{ fadeIn }}<br />
        Blinken: {{ blink }}
    {% endif %}
{% endblock explain %}